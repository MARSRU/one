1 、运算符 

   算术运算符
 赋值预算符

 逻辑运算符
 比较预算符                     ==   相等      比较值，如果类型不同，会进行类型转换在比较    ，   如果左右类型不一样， 会优先转换为 数值型 
              ===  全等      比较值是否相同， 还要比较类型是否相同  ，不会进行类型转换
              
                                           ！=   不等， 会进行类型转换
                                          ！==   不全等， 不会进行转换
                                          
，                                      var a =1 ，b=3

条件运算符                   也称为    三元（三目）运算符                     ？  ：


2 、 代码块 
 
  {
  sdfdsfdsfdsfsd
  sdfdsfdsfdsfdsfsd
  }

3 、 语句执行顺序

   ① 顺序结构，   代码从上到下 按顺序执行
   ② 分支结构 ，
   
       if(){}else{}   
       if(){}else if(){}...else{}
       if(){}if(){}
       if(){
       
         if(){
           }
       }   
       
                如果不写{}   只对最近的一条语句有效     
                
       switch（）{
       case  值：
       break;
       
       default:
       break;
       
       }
     ③ 循环结构 
      for(var a = 0 ; a<10 ;a++){  }
      
      while(){  }
      
      do{} while()

4 、   break  和  continue

5 、  label    使用 label 语句可以在代码中添加标签，以便将来使用。

6、对象

  复合数据类型  ， 基本数据类型， 只能存储单个的数据， 如果数据有多个的话， 为了， 数据的 整合性， 使用对象，进行存储
  
 7 、 定义对象的语法 
 
     第一种           var per=   new Object();  per.name="";  per.age=15;
     
    第二种        var per = {
                    name:"",
                    age :  
    
             }


 8 、定义好对象之后， 获取对象中的属性  
                   ①对象名.属性
                   ②对象名['属性']
                   
                   
 9 、js 中  除了基本数据类型， 剩下都是 Object类
     
                   自定义对象   、  数组、 函数   都是对象
                   
         数组： 定义 ：   var  arr = ["1",32,34,"abdf"];
     
    获取 数组中的值 ：  数组名[下标]；
    
      遍历数组中的所有值： for  
      
      
 10 、 定义一个函数  ，    函数就是  对象
 
 
 
 
 
 函数的两种创建方式 ： 
 
 第一种 ：
   定义 :function 函数名( 变量名 1,变量名2,...){   
   
          
    }
 
 一定要注意 函数定义好之后， 必须被调用  才能执行   
 
  调用          函数名（值，值。。。。）；
 
 第二种 ： 
 创建 ：
  var fun = function(){
 
   }
 
调用  fun();

11 、  arguments  这个对象用于 函数内部， 用来保存  函数中的 参数 值，是一个数组 。 

12 、this 

  ① 在最外层代码中，this 引用的是全局对象。
  
  ②  在函数中  ， this 引用的是全局对象
  
  ③ 在对象的方法中， 代表当前对象
  
  ④ 在构造方法中， 代表所生成的对象
  
13 、 创建 对象的方法

14 、 自定义 对象

       第一步 定义 构造方法   
           ---- 对象名首字母 大写
        function 对象名（）{
        
        
         }
          第二步 
        var p =  new 对象名（）；

        



     